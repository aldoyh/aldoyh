name: ReadMe Worker 🚧

on:
  workflow_dispatch:
  schedule:
    # Runs every minute
    - cron: "* */8 * * *"

jobs:
  build:
    name: Build 👔
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code ⛵️
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GH_PAT }} # make sure this secret is available in your repo settings

      - name: Setup new branch 🌿
        run: |
          git config --global user.email "aldoyh@gmail.com"
          git config --global user.name "Mastermind ⛵️"
          git checkout -b todoist-stats-update

      - name: Update todoist stats 📊
        uses: aldoyh/todoist-readme@master
        with:
          TODOIST_API_KEY: ${{ secrets.TODOIST_API_KEY }}

      - name: Check for changes in README.md 📝
        id: diff-check
        run: |
          git diff --exit-code --quiet origin/main README.md || echo "difference=true" >> $GITHUB_ENV

  deploy:
    name: Deployment ⛴️
    env:
      REPORT: ${{ steps.report.outputs.report }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Commit and push changes 🚀
        run: |
          if [[ "${{ env.difference }}" == "true" ]]; then
            git add .
            git commit -m "Update todoist stats"
            git fetch origin todoist-stats-update
            git reset --hard origin/todoist-stats-update
            git push --force-with-lease origin/todoist-stats-update
          else
            echo "No changes in README.md"
          fi
          echo "difference=false" >> $GITHUB_ENV
          echo "report=$(cat report.html)" >> $GITHUB_ENV
          echo "🚧 Diff: ${{ env.difference }}"

      - name: Merge into main 📦
        run: |
          if [[ "${{ env.difference }}" == "true" ]]; then
            git checkout main
            git merge --no-ff todoist-stats-update
            git push origin main
          else
            echo "No changes to merge into main"
          fi

      - name: Generate Report 🗒️
        id: report
        run: |
          echo "Detailed report would go here" > report.html
          echo "report=$(cat report.html)" >> $GITHUB_ENV
          echo "🚧 Report: ${{ steps.report.outputs.report }}"

      - name: Post to Slack 💬
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          INPUT_SLACK_MESSAGE: ${{ env.report }}
          INPUT_CHANNEL_ID: 'C040ZLS7P2P'
